// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Drawing;

namespace TestUpload
{
	public partial class ProgressView : UIView
	{

		////////////////////////////////////
		// VARIABLES
		////////////////////

		private UILabel percentLabel;
		private UIView progressBar;
		private float progressRatio;

		////////////////////////////////////
		// CONSTRUCTORS
		////////////////////

		public ProgressView (IntPtr handle) : base (handle) {
			this.percentLabel = new UILabel ();
			this.percentLabel.BackgroundColor = UIColor.Clear;
			this.percentLabel.TextAlignment = UITextAlignment.Center;

			this.progressBar = new UIView ();
			this.progressBar.BackgroundColor = UIColor.Green;

			this.AddSubview (this.progressBar);
			this.AddSubview (this.percentLabel);

			this.Layer.CornerRadius = 6;
			this.progressBar.Layer.CornerRadius = this.Layer.CornerRadius;
		}


		////////////////////////////////////
		// METHODS
		////////////////////

		protected override void Dispose (bool disposing) {
			base.Dispose (disposing);

			this.ReleaseDesignerOutlets ();

			if (this.percentLabel != null) {
				this.percentLabel.Dispose ();
				this.percentLabel = null;
			}

			if (this.progressBar != null) {
				this.progressBar.Dispose ();
				this.progressBar = null;
			}
		}

		public override void LayoutSubviews () {
			base.LayoutSubviews ();

			this.percentLabel.Frame = this.Bounds;
			this.progressBar.Frame = this.Bounds;

			this.UpdateProgress ();
		}

		private void UpdateProgress() {
			RectangleF progressBarFrame = this.progressBar.Frame;
			progressBarFrame.Width = this.Bounds.Width * this.progressRatio;

			this.progressBar.Frame = progressBarFrame;
			int progressPercent = (int)(this.progressRatio * 100f);
			this.percentLabel.Text = progressPercent + "%";
		}

		////////////////////////////////////
		// GETTERS/SETTERS
		////////////////////

		public float ProgressRatio {
			get { return this.progressRatio; }
			set {
				if (value < 0) {
					value = 0;
				} else if (value > 1) {
					value = 1;
				}

				this.progressRatio = value;
				this.UpdateProgress ();
			}
		}
	}
}
